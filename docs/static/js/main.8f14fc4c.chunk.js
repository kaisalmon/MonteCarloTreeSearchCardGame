(this["webpackJsonpcard-game-ai"]=this["webpackJsonpcard-game-ai"]||[]).push([[0],{20:function(e,t,a){},21:function(e,t,a){},39:function(e,t,a){"use strict";a.r(t);var r=a(0),n=a.n(r),o=a(3),s=a.n(o);a(20),a(21);class i{constructor(e,t,a){this.template=void 0,this.regex=void 0,this.slots=void 0,this.factory=void 0,this.template=t,this.regex=new RegExp("^"+t.replace(/%\w+/g,"(.+)?")+"$"),this.factory=a,this.slots=[...this.template.matchAll(/%(\w+)/gi)].map((e=>e[1])),i.templates[e].push(this)}static parse(e,t){const a=i.templates[e].filter((e=>t.toLowerCase().match(e.regex)));if(0===a.length)throw new Error(`Invalid text for slot ${e}: ${t}`);const r=[],n=a.map((e=>{try{const a=t.toLowerCase().match(e.regex),r=a?a.splice(1):[],n=e.slots.map(((e,t)=>i.parse(e,r[t])));return e.factory(...n)}catch(a){return void r.push(a)}})).filter((e=>e));if(0===n.length)throw r.length>1?new Error("Invalid text: "+t):r[0];const[o]=n;if(!o)throw Error();return o}}i.templates={Eff:[],Player:[],N:[]};class d{constructor(e,t){this.a=void 0,this.b=void 0,this.a=e,this.b=t}applyEffect(e,t){const a=this.a.applyEffect(e,t);return this.b.applyEffect(a,t)}}class l{constructor(e,t,a){this.target=void 0,this.from=void 0,this.to=void 0,this.target=e,this.from=t,this.to=a}applyEffect(e,t){const a=this.target.resolvePlayerKey(e,t),r=e[a],n=[...r[this.from]],o=[...r[this.to]],s=Math.floor(Math.random()*n.length);return o.push(...n.splice(s,1)),{...e,[a]:{...r,[this.to]:o,[this.from]:n}}}}class c extends l{constructor(e){super(e||u,"deck","hand")}}class h{constructor(e,t){this.target=void 0,this.amount=void 0,this.target=e,this.amount=t}applyEffect(e,t){const a=this.target.resolvePlayerKey(e,t);return{...e,[a]:{...e[a],health:e[a].health+this.amount}}}}var p=a(9),f=a.n(p);const u={resolvePlayerKey:(e,t)=>t},y={resolvePlayerKey:(e,t)=>"playerOne"===t?"playerTwo":"playerOne"};var m=function(){for(let e=0;e<25;e++)new i("N",f.a.toWords(e),(()=>e)),new i("N",`${e}`,(()=>e));new i("Player","yourself",(()=>u)),new i("Player","you",(()=>u)),new i("Player","your opponent",(()=>y)),new i("Player","the other player",(()=>y)),new i("Eff","%Eff and %Eff",((e,t)=>new d(e,t))),new i("Eff","%Eff, and %Eff",((e,t)=>new d(e,t))),new i("Eff","%Eff, %Eff",((e,t)=>new d(e,t))),new i("Eff","%Eff then %Eff",((e,t)=>new d(e,t))),new i("Eff","%Eff, then %Eff",((e,t)=>new d(e,t))),new i("Eff","%Player draws? a card",(e=>new c(e))),new i("Eff","draw a card",(()=>new c)),new i("Eff","draw the top card of your deck",(()=>new c)),new i("Eff","draw a card from your deck",(()=>new c)),new i("Eff","discard a random card(?: from your hand)",(()=>new l(u,"hand","discardPile"))),new i("Eff","%Player discards? a random card(?: from your hand)",(e=>new l(e,"hand","discardPile"))),new i("Eff","discard the top card (?:from|of) your deck",(()=>new l(u,"deck","discardPile"))),new i("Eff","%Player discards? the top card (?:from|of) (?:their|your) deck",(e=>new l(e,"deck","discardPile"))),new i("Eff","deal %N damage to %Player",((e,t)=>new h(t,-e))),new i("Eff","remove %N damage to %Player",((e,t)=>new h(t,e))),new i("Eff","%Player loses? %N health",((e,t)=>new h(e,-t))),new i("Eff","%Player gains? %N health",((e,t)=>new h(e,t)))};class g{preEffect(e,t,a){const r=e[a],n=[...r.hand];return n.splice(n.indexOf(t),1),{...e,[a]:{...r,hand:n}}}postEffect(e,t,a){return{...e,[a]:{...e[a],discardPile:[t,...e[a].discardPile]}}}play(e,t){const a=1===e.activePlayer?"playerOne":"playerTwo",r=this.preEffect(e,t,a),n=this.applyEffect(r,a);return this.postEffect(n,t,a)}}class v extends g{getName(){return this.name}getText(){return this.text}constructor(e,t,a){super(),this.effect=void 0,this.name=void 0,this.text=void 0,this.effect=e,this.text=t,this.name=a}applyEffect(e,t){return this.effect.applyEffect(e,t)}}const w=["Deal one damage to your opponent","Deal two damage to your opponent","Deal three damage to your opponent and deal one damage to yourself","Deal one damage to yourself then draw a card","Deal one damage to yourself then draw a card","You gain one health","You gain one health and you draw a card","Your opponent discards the top card from their deck","Discard the top card from your deck, then you gain two health","Deal two damage to your opponent","Deal three damage to your opponent"];var b=a(2),O=a.n(b),x=a(10);a.n(x)()();let j;!function(e){e.IN_PLAY="IN_PLAY",e.LOSE="RED_WIN",e.WIN="BLUE_WIN",e.DRAW="DRAW"}(j||(j={}));const P=e=>1===e?j.WIN:j.LOSE;class E{constructor(){this.mood="none"}pickMove(e,t){const a=O.a.sample(e.getSensibleMoves(t));if(a)return this.mood="Sensible",a;this.mood="Not Sensible";const r=O.a.sample(e.getValidMoves(t));if(r)return r;throw new Error("No valid moves")}}class k{constructor(e=60,t=100,a=(()=>0),r=new E){this.mood="waiting...",this.simulationStrategy=void 0,this.samples=void 0,this.depth=void 0,this.inPlayHeuristic=void 0,this.simulationStrategy=r,this.depth=t,this.samples=e,this.inPlayHeuristic=a}pickMove(e,t){const a=e.getValidMoves(t).map((e=>({move:e,score:0,outOf:0,depth:0,unfinished:0})));if(0===a.length)throw new Error("No valid moves");const r=P(t.activePlayer);for(let i=0;i<this.samples;i++)a.forEach((a=>{const n=e.randomizeHiddenInfo(t),o=e.applyMove(n,a.move),s=this.simulateGame(e,o);if(a.outOf++,s.status===r)a.score++;else if(s.status!==j.DRAW&&s.status!==j.IN_PLAY)a.score--;else if(void 0!==s.heuristic){const e=1===t.activePlayer?1:-1;a.score+=s.heuristic*e,a.unfinished++}a.depth+=s.length}));const n=O.a.maxBy(a,"score"),o=n.score/n.outOf,s=a.filter((({score:e,outOf:t})=>e/t>o-.01));if(o>.9){const e=O.a.minBy(s,"depth");return this.mood=JSON.stringify({score:(e.score/e.outOf).toFixed(2),goal:"Minimizing Length to Victory",depth:(e.depth/e.outOf).toFixed(2),unfinished:(e.unfinished/e.outOf).toFixed(2)}),e.move}if(o<-.9){const e=O.a.maxBy(s,"depth");return this.mood=JSON.stringify({score:(e.score/e.outOf).toFixed(2),goal:"Delaying time till loss",depth:(e.depth/e.outOf).toFixed(2),unfinished:(e.unfinished/e.outOf).toFixed(2)}),e.move}{const e=O.a.maxBy(s,"score");return this.mood=JSON.stringify({score:(e.score/e.outOf).toFixed(3),depth:(e.depth/e.outOf).toFixed(2),unfinished:(e.unfinished/e.outOf).toFixed(2)}),e.move}}simulateGame(e,t){let a=t;for(let n=0;n<this.depth;n++){const t=e.getStatus(a);if(t!==j.IN_PLAY)return{status:t,length:n};try{const t=this.simulationStrategy.pickMove(e,a);if(!t)return{status:j.DRAW,length:n};a=e.applyMove(a,t)}catch(r){if(r.message.includes("No valid move"))return{status:j.DRAW,length:n};throw r}}return{status:j.IN_PLAY,length:this.depth,heuristic:this.inPlayHeuristic(a)}}}var N=a(4),M=a.n(N);class I{constructor(e,t,a){this.cardIndex=void 0,this.deckOne=void 0,this.deckTwo=void 0,this.cardIndex=e,this.deckOne=t||Object.keys(this.cardIndex).map((e=>parseInt(e))),this.deckTwo=a||this.deckOne}applyMove(e,t){if("end"===t.type)return this.applyEndMove(e);if("play"===t.type)return this.applyCardPlay(e,t.cardNumber);if("discard"===t.type)return this.applyCardDiscard(e,t.cardNumber);throw new Error("Unknown move")}getSensibleMoves(e){return[]}getStatus(e){const t=0===e.playerOne.deck.length||e.playerOne.health<=0,a=0===e.playerTwo.deck.length||e.playerTwo.health<=0;return t&&a?j.DRAW:t?j.LOSE:a?j.WIN:j.IN_PLAY}getValidMoves(e){return"draw"===e.step?this.getDiscardMoves(e):[{type:"end"},...this.getCardMoves(e)]}newGame(){const e={hand:[],health:30,discardPile:[],board:[]},t={activePlayer:2,step:"play",playerOne:{deck:this.deckOne,...e},playerTwo:{deck:this.deckTwo,...e}};return this.applyEndMove(t)}print({playerOne:e,playerTwo:t,...a}){console.log(M.a.white(JSON.stringify(a,null,4))),console.log(M.a.blue(JSON.stringify(e,null,4))),console.log(M.a.red(JSON.stringify(t,null,4)))}randomizeHiddenInfo(e){const t=1===e.activePlayer?"playerTwo":"playerOne",a=[...e[t].deck,...e[t].hand],r=[];for(let n=0;n<e[t].hand.length;n++){const e=Math.floor(Math.random()*a.length);r.push(...a.splice(e,1))}return{...e,[t]:{...e[t],hand:r,deck:a}}}getCardMoves(e){return(1===e.activePlayer?e.playerOne:e.playerTwo).hand.map((e=>({type:"play",cardNumber:e})))}getDiscardMoves(e){return(1===e.activePlayer?e.playerOne:e.playerTwo).hand.map((e=>({type:"discard",cardNumber:e})))}applyEndMove(e){const t=1===e.activePlayer?2:1,a=1===t?"playerOne":"playerTwo",r=e[a],n=[...r.deck],o=[...r.hand];for(;o.length<7&&n.length>0;){const e=Math.floor(Math.random()*n.length);o.push(...n.splice(e,1))}const s={...r,deck:n,hand:o};return{...e,step:"draw",[a]:s,activePlayer:t}}applyCardPlay(e,t){return this.cardIndex[t].play(e,t)}applyCardDiscard(e,t){const a=1===e.activePlayer?"playerOne":"playerTwo",r=e[a],n=[...r.hand],o=[...r.discardPile];return o.push(...n.splice(n.indexOf(t),1)),{...e,step:n.length>6?"draw":"play",[a]:{...r,hand:n,discardPile:o}}}getHeuristic(e){const t=Math.max(0,e.playerOne.health*e.playerOne.deck.length),a=Math.max(0,e.playerTwo.health*e.playerTwo.deck.length);return t===a?0:(t-a)/(a+t)}}var C=a(1);const S={position:"relative",backgroundColor:"white",border:"1px solid black",fontSize:11,borderRadius:3,width:80,height:120,margin:5,top:0,display:"inline-block",transition:"transform 0.3s, margin 0.35s ease-in 0.3s, top 0.4s ease-in-out 0.5s",cursor:"not-allowed",overflow:"hidden",zIndex:0},T={fontWeight:"bold",fontSize:16},A={...S,color:"blue",borderColor:"black",transform:"scale(1.3)",marginLeft:-40,marginRight:-40,zIndex:1},D={...S,borderColor:"red",borderWidth:3,cursor:"pointer"},L={...S,borderColor:"blue",borderWidth:3,cursor:"pointer"},F={top:160},H={top:-160},W={backgroundColor:"darkgray",color:"darkgray",transform:"rotate3d(0,1,0,0.5turn)"};var Y=e=>{const{card:t,beingPlayed:a}=e,r=e.canBeDiscarded?D:e.canBePlayed?L:{},n=e.beingPlayed&&e.isOpponent?F:e.beingPlayed&&!e.isOpponent?H:{},o=e.isHidden?W:{},s=e.canBeDiscarded||e.canBePlayed?e.onClick:()=>{};return Object(C.jsxs)("div",{style:{...a?A:S,...r,...n,...o},onClick:s,children:[Object(C.jsx)("div",{style:T,children:t.getName()}),Object(C.jsx)("div",{children:t.getText()})]})},B=a(12),R=a(13);a(38);const _={border:"1px solid black",fontSize:10,borderRadius:3,width:40,height:60,margin:5,display:"inline-block"},z={maxHeight:200,fontSize:10,textAlign:"left",width:150,overflowY:"auto"};var J=e=>{const{label:t,cards:a}=e,{getArrowProps:r,getTooltipProps:n,setTooltipRef:o,setTriggerRef:s,visible:i}=Object(R.a)({interactive:!0,delayHide:100});return Object(C.jsxs)(C.Fragment,{children:[Object(C.jsxs)("div",{style:_,ref:s,children:[e.label,Object(C.jsx)("div",{children:a.length})]}),i&&Object(C.jsxs)("div",{ref:o,...n({className:"tooltip-container"}),children:[0===a.length&&Object(C.jsx)("i",{children:"Empty"}),Object(C.jsx)("ul",{style:z,children:a.map((e=>Object(C.jsxs)("li",{children:[Object(C.jsx)("b",{children:"string"===typeof e?e:e.getName()})," ","string"!==typeof e&&e.getText()]})))}),Object(C.jsx)("div",{...r({className:"tooltip-arrow"})})]})]})};const $={display:"flex",alignItems:"center",placeContent:"center"},V={...$,background:"gold"},G={display:"inline-flex",minWidth:400,justifyContent:"center"},K={fontSize:60,position:"relative"},U={position:"absolute",bottom:25,left:18,width:20,fontSize:16,color:"white",textAlign:"center"},q=({onCardClick:e,game:t,player:a,isActive:r,isHidden:o,lastmove:s,gamestate:i})=>{const[d,l]=n.a.useState(!0),c=s&&"play"===s.type?[s.cardNumber]:[],h=[...a.hand,...c].sort(((e,t)=>e-t));return Object(C.jsxs)("div",{style:r?V:$,children:[Object(C.jsxs)("div",{style:K,children:["\u2764",Object(C.jsx)("div",{style:U,children:a.health})]}),Object(C.jsxs)(B.a,{style:{...G},children:[0===h.length&&Object(C.jsx)("pre",{children:"(Empty Hand)"}),h.map((a=>(d||!c.includes(a))&&Object(C.jsx)("div",{children:Object(C.jsx)(Y,{onClick:()=>e(a),isOpponent:o,isHidden:o&&!c.includes(a),card:t.cardIndex[a],canBePlayed:r&&!o&&"play"===i.step&&!c.includes(a),canBeDiscarded:r&&!o&&"draw"===i.step&&!c.includes(a),beingPlayed:c.includes(a)})},a)))]}),Object(C.jsx)(J,{label:"deck",cards:a.deck.map((e=>o?"?":t.cardIndex[e]))}),Object(C.jsx)(J,{label:"discard",cards:a.discardPile.map((e=>t.cardIndex[e]))})]})};var Q=e=>{const{gamestate:t,game:a,lastmove:r,onCardClick:n}=e;return Object(C.jsxs)(C.Fragment,{children:[Object(C.jsxs)("div",{children:["Step: ",t.step]}),Object(C.jsx)(q,{onCardClick:()=>{},game:a,gamestate:t,player:t.playerTwo,lastmove:2===t.activePlayer?r:void 0,isActive:2===t.activePlayer,isHidden:!0}),Object(C.jsx)("div",{style:{height:"50vh"}}),Object(C.jsx)(q,{onCardClick:n,game:a,gamestate:t,player:t.playerOne,lastmove:1===t.activePlayer?r:void 0,isActive:1===t.activePlayer,isHidden:!1})]})};var X=function(){const e=Object(r.useMemo)((()=>(m(),[...w,...w,...w,...w].map(((e,t)=>{const a=i.parse("Eff",e);return new v(a,e,`#${t}`)})))),[]),t=Object(r.useMemo)((()=>Object.keys(e).map((e=>parseInt(e)))),[e]),a=Object(r.useMemo)((()=>new I(e,t)),[e,t]),o=new E,s=new k(1,1,(e=>a.getHeuristic(e))),d=new k(45,45,(e=>a.getHeuristic(e)),s),[l,c]=n.a.useState(a.newGame()),h=Object(r.useMemo)((()=>a.getStatus(l)),[a,l]),[p,f]=n.a.useState(NaN),[u,y]=n.a.useState(d.mood),[g,b]=n.a.useState({type:"end"});return Object(C.jsxs)("div",{className:"App",children:[h!==j.IN_PLAY&&Object(C.jsx)("h1",{children:h}),Object(C.jsx)(Q,{gamestate:l,game:a,lastmove:g,onCardClick:e=>{if(h!==j.IN_PLAY)return;const t=function(e,t){return"draw"==e.step?{type:"discard",cardNumber:t}:{type:"play",cardNumber:t}}(l,e),r=a.applyMove(l,t);c(r),b(t)}}),Object(C.jsxs)("button",{disabled:h!==j.IN_PLAY||1===l.activePlayer,onClick:()=>{const e=performance.now(),t=1===l.activePlayer?o:d,r=t.pickMove(a,l);f(performance.now()-e);const n=a.applyMove(l,r);c(n),y(t.mood),b(r)},children:["step AI ",p?`(${p.toFixed(2)} ms)`:""]}),Object(C.jsx)("button",{disabled:h!==j.IN_PLAY||2===l.activePlayer||!a.getValidMoves(l).find((e=>"end"===e.type)),onClick:()=>{const e={type:"end"},t=a.applyMove(l,e);c(t),b(e)},children:"End Turn"}),Object(C.jsx)("div",{children:u})]})};var Z=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,44)).then((({getCLS:t,getFID:a,getFCP:r,getLCP:n,getTTFB:o})=>{t(e),a(e),r(e),n(e),o(e)}))};s.a.render(Object(C.jsx)(n.a.StrictMode,{children:Object(C.jsx)(X,{})}),document.getElementById("root")),Z()}},[[39,1,2]]]);
//# sourceMappingURL=main.8f14fc4c.chunk.js.map